#!/bin/bash

# Bash64Wordlist - Generate base64(username:password) combos

# Parse arguments
while getopts u:p:o: flag; do
    case "$flag" in
        u) userfile="$OPTARG" ;;
        p) passfile="$OPTARG" ;;
        o) outfile="$OPTARG" ;;
        *) echo "Usage: $0 -u <user_file> -p <pass_file> -o <output_file>"; exit 1 ;;
    esac
done

# Validate input
[[ -z "$userfile" || -z "$passfile" || -z "$outfile" ]] && {
    echo "Usage: $0 -u <user_file> -p <pass_file> -o <output_file>"
    exit 1
}

# Load non-empty lines into arrays
readarray -t users < <(grep -v '^\s*$' "$userfile")
readarray -t passes < <(grep -v '^\s*$' "$passfile")

# Determine pair count (1:1 mapping)
count=${#users[@]}
[[ ${#passes[@]} -lt $count ]] && count=${#passes[@]}

# Clear output
> "$outfile"

# Encode and write
for ((i=0; i<count; i++)); do
    printf '%s\n' "${users[i]}:${passes[i]}" | base64 >> "$outfile"
done

echo "[+] Generated $count base64 credentials â†’ $outfile"
